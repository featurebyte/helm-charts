{{- if eq .Values.s3.provider "minio" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "featurebyte-oss.fullname" . }}-minio
  labels: {{ include "featurebyte-oss.labels.minio" . | nindent 4 }}
spec:
  serviceName: {{ include "featurebyte-oss.fullname" . }}-minio-headless
  replicas: 1
  selector:
    matchLabels: {{ include "featurebyte-oss.selectorLabels.minio" . | nindent 6 }}
  template:
    metadata:
      labels: {{ include "featurebyte-oss.labels.minio" . | nindent 8 }}
    spec:
      initContainers:
        # To create the bucket first before starting the server
        - name: fsBucket
          image: minio/minio:latest
          command:
            - sh
            - "-c"
            - "mkdir -p /data/${MINIO_BUCKET_NAME}"
          env:
            {{- include "featurebyte-oss.env.s3minio" . | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: minio
          image: minio/minio:latest
          command:
            - minio
            - server
            - "/data"
            - --console-address
            - ":9001"
          env:
            {{- include "featurebyte-oss.env.s3minio" . | nindent 12 }}
          ports:
            - name: api
              containerPort: 9000
              protocol: TCP
            - name: console
              containerPort: 9001
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
{{- end }}