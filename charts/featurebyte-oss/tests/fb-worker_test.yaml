suite: featurebyte-worker

tests:
  - it: worker[scheduler] deployment exists
    template: fb-worker/deployment-scheduler.yaml
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: -scheduler$
  - it: worker[cpu] deployment exists
    template: fb-worker/deployment-worker-cpu.yaml
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: worker-cpu$

  - it: worker[io] deployment exists
    template: fb-worker/deployment-worker-io.yaml
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: worker-io$

  - it: workers using mongodb operator
    templates:
      - fb-worker/deployment-scheduler.yaml
      - fb-worker/deployment-worker-cpu.yaml
      - fb-worker/deployment-worker-io.yaml
    set:
      mongodb.provider: "communityOperator"
    asserts:
      - isKind:
          of: Deployment
      # check that the mongodb external secret is specified
      - notMatchRegex:
          path: spec.template.spec.containers[0].env[?(@.name == "MONGODB_URI")].valueFrom.secretKeyRef.name
          pattern: -mongodb-external$

  - it: workers not using mongodb operator
    templates:
      - fb-worker/deployment-scheduler.yaml
      - fb-worker/deployment-worker-cpu.yaml
      - fb-worker/deployment-worker-io.yaml
    set:
      mongodb.provider: "external"
    asserts:
      - isKind:
          of: Deployment
      # check that the mongodb external secret is specified
      - matchRegex:
          path: spec.template.spec.containers[0].env[?(@.name == "MONGODB_URI")].valueFrom.secretKeyRef.name
          pattern: -mongodb-external$

  - it: workers using minio
    templates:
      - fb-worker/deployment-scheduler.yaml
      - fb-worker/deployment-worker-cpu.yaml
      - fb-worker/deployment-worker-io.yaml
    set:
      s3.provider: "minio"
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].env[?(@.name == "S3_URL")].value
          pattern: "^http://.+?-minio:9000$"

  - it: workers using external
    templates:
      - fb-worker/deployment-scheduler.yaml
      - fb-worker/deployment-worker-cpu.yaml
      - fb-worker/deployment-worker-io.yaml
    set:
      s3.provider: "external"
      s3.external.url: "https://storage.googleapis.com"
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].env[?(@.name == "S3_URL")].value
          pattern: "^https://storage.googleapis.com$"

  - it: test image used
    templates:
      - fb-worker/deployment-scheduler.yaml
      - fb-worker/deployment-worker-cpu.yaml
      - fb-worker/deployment-worker-io.yaml
    set:
      featurebyte.api.image.repository: "featurebyte/featurebyte-server"
      featurebyte.api.image.tag: "test"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "featurebyte/featurebyte-server:test"

  - it: appVersion image used
    templates:
      - fb-worker/deployment-scheduler.yaml
      - fb-worker/deployment-worker-cpu.yaml
      - fb-worker/deployment-worker-io.yaml
    set:
      featurebyte.api.image.repository: "featurebyte/featurebyte-server"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "featurebyte/featurebyte-server:0.5.0"  # Might need to update this if the appVersion changes

  - it: kerberos enabled with env values
    templates:
      - fb-worker/deployment-scheduler.yaml
      - fb-worker/deployment-worker-cpu.yaml
      - fb-worker/deployment-worker-io.yaml
    set:
      featurebyte.kerberos.enabled: true
      featurebyte.kerberos.realm: "TESTING.COM"
      featurebyte.kerberos.kdc: "kdc.testing.com"
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_REALM")]
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_REALM")].value
          value: "TESTING.COM"
      - isNotNull:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_KDC")]
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_KDC")].value
          value: "kdc.testing.com"

  - it: kerberos disabled
    templates:
      - fb-worker/deployment-scheduler.yaml
      - fb-worker/deployment-worker-cpu.yaml
      - fb-worker/deployment-worker-io.yaml
    set:
      featurebyte.kerberos.enabled: false
      featurebyte.kerberos.realm: "TESTING.COM"
      featurebyte.kerberos.kdc: "kdc.testing.com"
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_REALM")]
      - isNull:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_KDC")]



  - it: secrets missing
    templates:
      - fb-worker/deployment-scheduler.yaml
      - fb-worker/deployment-worker-cpu.yaml
      - fb-worker/deployment-worker-io.yaml
    set:
      encryption_secret: ""
      jwt_secret: ""
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].env[?(@.name == "CONFIG_PASSWORD_SECRET")]
      - isNull:
          path: spec.template.spec.containers[0].env[?(@.name == "CONFIG_JWT_SECRET")]

  - it: secrets set
    templates:
      - fb-worker/deployment-scheduler.yaml
      - fb-worker/deployment-worker-cpu.yaml
      - fb-worker/deployment-worker-io.yaml
    set:
      encryption_secret: "test_secret"
      jwt_secret: "test_secret2"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "CONFIG_PASSWORD_SECRET")].value
          decodeBase64: true
          value: "test_secret"
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "CONFIG_JWT_SECRET")].value
          decodeBase64: true
          value: "test_secret2"
