suite: featurebyte-api

tests:
  - it: api deployment exists
    template: fb-api/deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: -api$
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^featurebyte/featurebyte-server
  - it: api image changes
    template: fb-api/deployment.yaml
    set:
      featurebyte.api.image.repository: "featurebyte.localhost:10443/featurebyte-server"
      featurebyte.api.image.tag: "latest"
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: -api$
      - equal:
          path: spec.template.spec.containers[0].image
          value: featurebyte.localhost:10443/featurebyte-server:latest

  - it: api using mongodb operator
    template: fb-api/deployment.yaml
    set:
      mongodb.provider: "communityOperator"
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: -api$
      # check that the mongodb external secret is specified
      - notMatchRegex:
          path: spec.template.spec.containers[0].env[?(@.name == "MONGODB_URI")].valueFrom.secretKeyRef.name
          pattern: -mongodb-external$

  - it: api using external mongodb
    template: fb-api/deployment.yaml
    set:
      mongodb.provider: "external"
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: -api$
      # check that the mongodb external secret is specified
      - matchRegex:
          path: spec.template.spec.containers[0].env[?(@.name == "MONGODB_URI")].valueFrom.secretKeyRef.name
          pattern: -mongodb-external$

  - it: api uses hpa by default
    template: fb-api/deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: -api$
      - isNull:
          path: spec.replicas

  - it: api hpa enabled by default
    template: fb-api/hpa.yaml
    asserts:
      - isKind:
          of: HorizontalPodAutoscaler
      - matchRegex:
          path: metadata.name
          pattern: -api$
      - matchRegex:
          path: spec.scaleTargetRef.name
          pattern: -api$

  - it: api hpa disabled
    template: fb-api/deployment.yaml
    set:
      featurebyte.api.autoscaling.enabled: false
    asserts:
      - isNotNull:
          path: spec.replicas

  - it: api hpa disabled
    template: fb-api/hpa.yaml
    set:
      featurebyte.api.autoscaling.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: api resources rendering
    template: fb-api/deployment.yaml
    set:
      featurebyte.api.resources.limits.memory: 2Gi
      featurebyte.api.resources.requests.cpu: 1000m
      featurebyte.api.resources.requests.memory: 2Gi
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: -api$
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 2Gi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 1000m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 2Gi

  - it: api redis rendering
    template: fb-api/deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: -api$
      - matchRegex:
          path: spec.template.spec.containers[0].env[?(@.name == "REDIS_URI")].value
          pattern: "^redis://.+?-redis:6379$"

  - it: api using external redis
    template: fb-api/deployment.yaml
    set:
      redis.provider: "external"
      redis.external.connectionStr: "redis://localhost:6379"
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: metadata.name
          pattern: -api$
      - matchRegex:
          path: spec.template.spec.containers[0].env[?(@.name == "REDIS_URI")].value
          pattern: "^redis://localhost:6379$"

  - it: api using minio
    template: fb-api/deployment.yaml
    set:
      s3.provider: "minio"
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].env[?(@.name == "S3_URL")].value
          pattern: "^http://.+?-minio:9000$"

  - it: api using external
    template: fb-api/deployment.yaml
    set:
      s3.provider: "external"
      s3.external.url: "https://storage.googleapis.com"
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].env[?(@.name == "S3_URL")].value
          pattern: "^https://storage.googleapis.com$"

  - it: test image used
    template: fb-api/deployment.yaml
    set:
      featurebyte.api.image.repository: "featurebyte/featurebyte-server"
      featurebyte.api.image.tag: "test"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "featurebyte/featurebyte-server:test"

  - it: appVersion image used
    template: fb-api/deployment.yaml
    set:
      featurebyte.api.image.repository: "featurebyte/featurebyte-server"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "featurebyte/featurebyte-server:0.6.0"  # Might need to update this if the appVersion changes

  - it: kerberos enabled with env values
    template: fb-api/deployment.yaml
    set:
      featurebyte.kerberos.enabled: true
      featurebyte.kerberos.realm: "TESTING.COM"
      featurebyte.kerberos.kdc: "kdc.testing.com"
    asserts:
      - isNotNull:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_REALM")]
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_REALM")].value
          value: "TESTING.COM"
      - isNotNull:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_KDC")]
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_KDC")].value
          value: "kdc.testing.com"

  - it: kerberos disabled
    template: fb-api/deployment.yaml
    set:
      featurebyte.kerberos.enabled: false
      featurebyte.kerberos.realm: "TESTING.COM"
      featurebyte.kerberos.kdc: "kdc.testing.com"
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_REALM")]
      - isNull:
          path: spec.template.spec.containers[0].env[?(@.name == "KRB5_KDC")]

  - it: secrets missing
    template: fb-api/deployment.yaml
    set:
      encryption_secret: ""
      jwt_secret: ""
    asserts:
      - isNull:
          path: spec.template.spec.containers[0].env[?(@.name == "CONFIG_PASSWORD_SECRET")]
      - isNull:
          path: spec.template.spec.containers[0].env[?(@.name == "CONFIG_JWT_SECRET")]

  - it: secrets set
    template: fb-api/deployment.yaml
    set:
      encryption_secret: "test_secret"
      jwt_secret: "test_secret2"
    asserts:
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "CONFIG_PASSWORD_SECRET")].value
          decodeBase64: true
          value: "test_secret"
      - equal:
          path: spec.template.spec.containers[0].env[?(@.name == "CONFIG_JWT_SECRET")].value
          decodeBase64: true
          value: "test_secret2"
