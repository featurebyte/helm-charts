# Global configuration
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Featurebyte configuration
featurebyte:
  securityContext: {}
  api:
    replicaCount: 1
    image:
      repository: "featurebyte/featurebyte-server"
      pullPolicy: Always
      tag: "latest"
    resources:
       limits:
         memory: 2Gi
       requests:
         cpu: 1000m
         memory: 2Gi
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 80
    nodeSelector: {}
    tolerations: []
    affinity: {}
  worker:
    replicaCount: 1
    image:
      repository: "featurebyte/featurebyte-server"
      pullPolicy: Always
      tag: "latest"
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80
    # Pod placement selectors and tolerations for the worker deployment
    nodeSelector: {}
    tolerations: []
    affinity: {}

s3:
  # Use minio for local development
  # Productionize switch to an external s3 provider
  # minio or external
  provider: minio
  minio:
    rootUser: "root_user"
    rootPassword: "root_password"
    bucketName: "featurebyte"
  external:
    endpoint: "<Endpoint>"
    region: "<Region>"
    accessKey: "<AccessKey>"
    secretKey: "<SecretKey>"
    bucketName: "<BucketName>"

mongodb:
  # communityOperator or external
  provider: "communityOperator"
  communityOperator:
    password: "<your-password>"
    passwordRef:
      # passwordRef takes precedence over password
      # if you set mongodb.passwordRef.enabled to true, mongodb.password will be IGNORED
      enabled: false
      name: ""
      key: "password"
  external:
    connectionStr: "mongodb://external:27017"

redis:
  # standalone or external
  provider: "standalone"
  # If reids is disabled, you would need to specify a redis connection str to connect
  external:
    connectionStr: "redis://external:6379"

community-operator:
  community-operator-crds:
    enabled: false

ingress:
  enabled: false