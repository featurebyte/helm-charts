# Global configuration
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Featurebyte configuration
featurebyte:
  securityContext: {}
  api:
    replicaCount: 1
    image:
      repository: "featurebyte/featurebyte-server"
      pullPolicy: IfNotPresent
      # Enable this to override the tag used (defaulted to Chart.appVersion)
      # tag: "latest"
    resources:
       limits:
         memory: 2Gi
       requests:
         cpu: 500m
         memory: 2Gi
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 80
    nodeSelector: {}
    tolerations: []
    affinity: {}
  worker:
    replicaCount: 1
    image:
      repository: "featurebyte/featurebyte-server"
      pullPolicy: IfNotPresent
      # Enable this to override the tag used (defaulted to Chart.appVersion)
      # tag: "latest"
    resources:
       requests:
         cpu: 1000m
         memory: 1024Mi
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80
    # Pod placement selectors and tolerations for the worker deployment
    nodeSelector: {}
    tolerations: []
    affinity: {}

s3:
  # Use minio for local development
  # Productionize switch to an external s3 provider
  # minio or external
  provider: minio
  minio:
    rootUser: "root_user"
    rootPassword: "root_password"
    bucketName: "featurebyte"
    image:
      repository: "minio/minio"
      pullPolicy: IfNotPresent
      tag: "RELEASE.2023-06-29T05-12-28Z"
    persistence:
      size: "4Gi"
      storageClass: "standard"
  # External s3 provider
  # Provide your S3 credentials and config here
  external:
    url: "<Url>"
    region: "<Region>"
    accessKey: "<AccessKey>"
    secretKey: "<SecretKey>"
    bucketName: "<BucketName>"

mongodb:
  # communityOperator or external
  provider: "communityOperator"
  communityOperator:
    # Mongodb Community operator persistence settings
    persistence:
      storageClass: "standard"
      dataSize: "10G"
      logSize: "2G"
    password: "your-password"
    passwordRef:
      # passwordRef takes precedence over password
      # if you set mongodb.passwordRef.enabled to true, mongodb.password will be IGNORED
      enabled: false
      name: ""
      key: "password"
  # To setup mongodb external, you would need to specify a mongodb connection str to connect
  # The mongodb server will create and use a database called `featurebyte`
  external:
    connectionStr: "mongodb://<Account>:<Password>external:27017/"

redis:
  # standalone or external
  provider: "standalone"
  standalone:
    image:
      repository: "redis"
      pullPolicy: IfNotPresent
      # Enable this to override the tag used (defaulted to Chart.appVersion)
      tag: "7.0"
    persistence:
      storageClass: "standard"
      size: "1Gi"
  # If redis is disabled, you would need to specify a redis connection str to connect
  external:
    connectionStr: "redis://external:6379"

# Mongodb Community Operator
community-operator:
  community-operator-crds:
    enabled: false
  registry:
    pullPolicy: IfNotPresent

# Sample ingress configuration
# Disable this ingress and use your own ingress configuration
ingress:
  enabled: false
  host: app.featurebyte.localhost
