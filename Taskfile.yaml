version: 3

vars:
  NAMESPACE: featurebyte
  CLUSTER_NAME: featurebyte-helm
  RAILGUARDS_DISABLED: false
  RAILGUARDS_KUBE_CONTEXT: k3d-featurebyte-helm

tasks:
  k3d-start:
    desc: "Create k3d cluster"
    status:
      - k3d cluster list {{.CLUSTER_NAME}} | awk 'NR!=1 {print $2}' | grep -Pq '([0-9]+)/\1'
    run: once
    cmds:
      - docker volume create k3d-featurebyte-registry
      - k3d cluster list {{.CLUSTER_NAME}} || k3d cluster create --config dev/k3d-config.yaml && k3d cluster start {{.CLUSTER_NAME}}
      - task: k3d-traefik

  k3d-stop:
    desc: "Stop k3d cluster"
    run: once
    cmds:
      - k3d cluster stop {{.CLUSTER_NAME}}

  k3d-traefik:
    desc: "Add connection to k3d dashboard"
    run: once
    cmds:
      - kubectl apply -f dev/traefik.yaml

  k3d-delete:
    desc: "Delete k3d cluster"
    run: once
    cmds:
      - k3d cluster delete --config dev/k3d-config.yaml

  k3d-context:
    desc: "Set k3d context"
    run: once
    status:
      - '[[ $(kubectl config current-context) == "{{.RAILGUARDS_KUBE_CONTEXT}}" ]]'
    silent: true
    cmds:
      - cmd: |
          if [[ "{{.RAILGUARDS_DISABLED}}" == "true" ]]; then
            echo "[WARN] RAILGUARDS_DISABLED is set to true. Skipping k3d context setup."
            exit 0
          else
            kubectl config use-context {{.RAILGUARDS_KUBE_CONTEXT}}
          fi

  mongodb-operator:
    desc: Install MongoDB Operator Crds
    status:
      - helm status community-operator-crds -n default
    deps:
      - task: k3d-context
    cmds:
      - helm upgrade community-operator-crds community-operator-crds -n default --install --repo=https://mongodb.github.io/helm-charts

# DEBUGGING COMMANDS
  helm-template:
    dir: charts/featurebyte-oss
    cmds:
      - helm template featurebyte-oss . -n {{.NAMESPACE}} --debug

  test-plugins:
    internal: true
    status:
      - helm plugin list | grep "unittest"
    cmds:
      - helm plugin install https://github.com/helm-unittest/helm-unittest.git

  test:
    desc: "Run all tests"
    cmds:
      - task oss-test

  oss-test:
    desc: "Run featurebyte-oss tests"
    dir: charts/featurebyte-oss
    deps:
      - task: test-plugins
    cmds:
      - helm unittest .

  oss-docker-build:
    desc: "Build featurebyte-oss docker image"
    dir: ../featurebyte  # This will only work if the repo are in the same level
    deps:
      - task: k3d-start
    cmds:
      - docker buildx build . -f docker/Dockerfile -t registry.localhost:10443/featurebyte-server:latest --push

  oss-dev:
    desc: "Install featurebyte-oss in dev mode"
    deps:
      - task: k3d-start
    dir: charts/featurebyte-oss
    cmds:
      - task: k3d-context
      - task: mongodb-operator
      - task: oss-docker-build
      - helm upgrade dev . -n {{.NAMESPACE}} --create-namespace --install --dependency-update -f values.yaml,dev-values.yaml

  oss-wait:
    desc: "Wait for featurebyte-oss to be ready"
    dir: charts/featurebyte-oss
    cmds:
      - kubectl wait --for=condition=Ready pods --all -n {{.NAMESPACE}} --timeout=1200s && echo "All ready" || { echo "Failed to start"; kubectl get all -n {{.NAMESPACE}}; exit 1; }
